The first character indicates the type of input.

    "-" indicates a file

    "d" indicates a directory

    "i" indicates a link (a symlink, which is a shortcut to a file/directory)

*-rwxrwxrwx*

useradd [OPTIONS] <user_name>

groupadd [OPTIONS] <group_name>

Add user to the group

sudo usermod -aG <group_name> <user_name>

List groups in a system

cat /etc/group

You can use the chown command to change the ownership of a file. The chown command is abbreviated from "change owner". 

chown <user_name> <file_name>

chown --reference=<source_file_name> <destination_file_name>

sudo chown <user_name> file1 file2 ...

To change group ownership

sudo chgrp <group_name> <file/dir_name>

chmod <user><group><others> <file_name>

To change both the owner and the group of a file use the chown command followed by the new owner and group separated by a colon (:)

with no intervening spaces and the target file.

chown USER:GROUP FILE

The following command will change the ownership of a file named file1 to a new owner named linuxize and group users:

chown linuxize:users file1

If you omit the group name after the colon (:), the group of the file is changed to the specified userâ€™s login group:

chown linuxize: file1

sudo chgrp admin group_test/

sudo chgrp -R admin group_test/
chmod +r <filename>

chmod +w <filename>

chmod +x <filename>

chmod -r <filename>

chmod -rwx <filename>

Add or Remove permissions recursively to all sub-directories

sudo chmod -R <permission> <filename>

chmod u+rwx,go+r <filename>
